# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branc
  push:
    branches: ["source"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3'
      - name: Setup bundler cache
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-bundler-${{ hashFiles('Gemfile.lock') }}
          path: .bundle/gems
      - name: Setup build cache
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-source-build
          path: __source_build
      - name: Install dependencies
        run: bundle install
      - name: Build with Middleman
        run: |
          mkdir -p __source_build
          BUILD_OUTPUT="__source_build" middleman build
      - name: Set CNAME
        if: ${{ github.repository == 'rspec/rspec.github.io' }}
        run: echo "rspec.info" > CNAME
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: '__source_build'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
